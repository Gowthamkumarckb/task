{"version":3,"sources":["components/DatePicker.js","App.js","reportWebVitals.js","index.js","components/DatePicker.module.css"],"names":["DatePicker","endDate","selectDate","getSelectedDay","color","labelFormat","useState","Date","selectedDate","setSelectedDate","firstSection","marginLeft","startDate","lastDate","addDays","primaryColor","selectedStyle","fontWeight","width","height","borderRadius","border","buttonColor","background","labelColor","getStyles","day","isSameDay","onDateClick","useEffect","setTimeout","view","document","getElementById","scrollIntoView","behavior","inline","block","className","styles","container","buttonWrapper","button","style","onClick","e","getBoundingClientRect","scrollLeft","months","days","i","start","end","month","startOfMonth","addMonths","Number","format","differenceInMonths","lastDayOfMonth","j","push","id","dateDayItem","dayLabel","dateLabel","monthContainer","monthYearLabel","daysContainer","dateListScrollable","renderDays","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.cbc09bf0.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./DatePicker.module.css\"\r\nimport {\r\n    addDays,\r\n    addMonths,\r\n    differenceInMonths,\r\n    format,\r\n    isSameDay,\r\n    lastDayOfMonth,\r\n    startOfMonth\r\n} from \"date-fns\";\r\n\r\nexport default function DatePicker({endDate, selectDate, getSelectedDay, color, labelFormat}) {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const firstSection = {marginLeft: '40px'};\r\n    const startDate = new Date();\r\n    const lastDate = addDays(startDate, endDate || 90);\r\n    const primaryColor = color || 'rgb(54, 105, 238)';\r\n    const selectedStyle = {fontWeight:\"bold\",width:\"45px\",height:\"45px\",borderRadius:\"50%\",border:`2px solid ${primaryColor}`,color:primaryColor};\r\n    const buttonColor = {background: primaryColor};\r\n    const labelColor= {color: primaryColor};\r\n\r\n    const getStyles = (day) => {\r\n        if (isSameDay(day, selectedDate)) {\r\n            return(selectedStyle);\r\n        }\r\n        return null\r\n    };\r\n\r\n    const getId = (day) => {\r\n        if (isSameDay(day, selectedDate)) {\r\n            return ('selected')\r\n        } else {\r\n            return (\"\")\r\n        }\r\n    };\r\n\r\n    function renderDays() {\r\n        const dayFormat = \"E\";\r\n        const dateFormat = \"d\";\r\n        const months = [];\r\n        let days = [];\r\n        for (let i = 0; i <= differenceInMonths(lastDate, startDate); i++) {\r\n            let start, end;\r\n            const month = startOfMonth(addMonths(startDate, i));\r\n            start = i === 0 ? Number(format(startDate, dateFormat)) - 1 : 0;\r\n            end = i === differenceInMonths(lastDate, startDate) ? Number(format(lastDate, \"d\")) : Number(format(lastDayOfMonth(month), \"d\"));\r\n            for (let j = start; j < end; j++) {\r\n                days.push(\r\n                    <div id={`${getId(addDays(startDate, j))}`}\r\n                         className={styles.dateDayItem}\r\n                         style={getStyles(addDays(month, j))}\r\n                         key={addDays(month, j)}\r\n                         onClick={() => onDateClick(addDays(month, j))}\r\n                    >\r\n                        <div className={styles.dayLabel}>\r\n                            {format(addDays(month, j), dayFormat)}\r\n                        </div>\r\n                        <div className={styles.dateLabel}>\r\n                            {format(addDays(month, j), dateFormat)}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            months.push(\r\n                <div className={styles.monthContainer} key={month}>\r\n                    <span className={styles.monthYearLabel} style={labelColor}>\r\n                        {format(month, labelFormat || \"MMMM yyyy\")}\r\n                    </span>\r\n                    <div className={styles.daysContainer} style={i===0?firstSection:null}>\r\n                        {days}\r\n                    </div>\r\n                </div>\r\n            );\r\n            days = [];\r\n        }\r\n        return <div id={\"container\"} className={styles.dateListScrollable}>{months}</div>;\r\n    }\r\n\r\n    const onDateClick = day => {\r\n        setSelectedDate(day);\r\n        if (getSelectedDay) {\r\n            getSelectedDay(day);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (getSelectedDay) {\r\n            if (selectDate) {\r\n                getSelectedDay(selectDate);\r\n            } else {\r\n                getSelectedDay(startDate);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectDate) {\r\n            if (!isSameDay(selectedDate, selectDate)) {\r\n                setSelectedDate(selectDate);\r\n                setTimeout(() => {\r\n                    let view = document.getElementById('selected');\r\n                    if (view) {\r\n                        view.scrollIntoView({behavior: \"smooth\", inline: \"center\", block: \"nearest\"});\r\n                    }\r\n                }, 20);\r\n            }\r\n        }\r\n    }, [selectDate]);\r\n\r\n    const nextWeek = () => {\r\n        const e = document.getElementById('container');\r\n        const width = e ? e.getBoundingClientRect().width : null;\r\n        e.scrollLeft += width - 60;\r\n    };\r\n\r\n    const prevWeek = () => {\r\n        const e = document.getElementById('container');\r\n        const width = e ? e.getBoundingClientRect().width : null;\r\n        e.scrollLeft -= width - 60;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.buttonWrapper}>\r\n                <button className={styles.button} style={buttonColor} onClick={prevWeek}>←</button>\r\n            </div>\r\n            {renderDays()}\r\n            <div className={styles.buttonWrapper}>\r\n                <button className={styles.button} style={buttonColor} onClick={nextWeek}>→</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import DatePicker from './components/DatePicker'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <DatePicker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DatePicker_container__3-LyN\",\"buttonWrapper\":\"DatePicker_buttonWrapper__11tGP\",\"button\":\"DatePicker_button__2yN0k\",\"dateListScrollable\":\"DatePicker_dateListScrollable__y6VZ-\",\"monthContainer\":\"DatePicker_monthContainer__1Lani\",\"monthYearLabel\":\"DatePicker_monthYearLabel__1VUHe\",\"dateDayItem\":\"DatePicker_dateDayItem__3gNTc\",\"daysContainer\":\"DatePicker_daysContainer__39LVL\",\"dayLabel\":\"DatePicker_dayLabel__2Vpfo\",\"dateLabel\":\"DatePicker_dateLabel__JCSdU\"};"],"sourceRoot":""}